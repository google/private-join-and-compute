/*
 * Copyright 2019 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package private_join_and_compute.proto;

import "private_join_and_compute/crypto/proto/big_num.proto";

option java_multiple_files = true;

// Parameters key for Pedersen commitment scheme. All the fields are serialized
// BigNums.
//
// To commit to a set of messages m1, ... , mk < ord(h):
// c = g1^m1 * ... * gk^mk * * h^r mod n for a random r.
// n may be a prime or an RSA modulus. For "hiding", each element of gs should
// be in the subgroup generated by h. For "binding", the discrete log of each
// element of gs with respect to h should be hidden.
message PedersenParameters {
  // Serialized BigNum.
  bytes n = 1;
  BigNumVector gs = 2;
  // Serialized BigNum.
  bytes h = 3;
}